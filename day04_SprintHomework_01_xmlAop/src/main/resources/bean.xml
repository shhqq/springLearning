<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 首先配置业务层对象， 配置service对象 -->
    <bean id="accountService" class="com.springLearn.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
    </bean>

    <!-- accountService中需要一个accountDao对象，因此需要配置Dao对象 -->
    <bean id="accountDao" class="com.springLearn.dao.impl.AccountDaoImpl">
        <property name="runner" ref="runner"/>
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils"/>

    </bean>

    <!-- Dao中需要一个QueryRunner对象，因此需要配置QueryRunner对象 -->
    <!--  因为对数据库的操作可能会同时执行，导致线程安全问题，因此这里对象声明为多实例，避免对象调用冲突  -->
    <bean id="runner" class="org.apache.commons.dbutils.QueryRunner" scope="prototype">
    </bean>

    <!-- runner中需要数据源，因此还需要 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 连接数据库的四大必备信息 -->
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/mydbtest"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!--配置Connection的工具类，即ConnectionUtils-->
    <bean id="connectionUtils" class="com.springLearn.utils.ConnectionUtils">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="com.springLearn.utils.TransactionManager">
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils"/>
    </bean>

    <!-- 新增aop配置-->
    <aop:config>
        <!-- 配置切入点表达式，注意：事务控制要放在业务层，也就是这里是service.impl -->
        <aop:pointcut id="pt" expression="execution(* com.springLearn.service.impl.*.*(..))"/>
        <aop:aspect id="aspectAdvice" ref="transactionManager">
            <aop:before method="beginTransaction" pointcut-ref="pt"/>
            <aop:after-returning method="commit" pointcut-ref="pt"/>
            <aop:after-throwing method="rollback" pointcut-ref="pt"/>
            <aop:after method="release" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>
</beans>